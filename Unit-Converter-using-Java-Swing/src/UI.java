
import java.awt.event.KeyEvent;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author khushwantsingh 
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        Area = new javax.swing.JButton();
        Volume = new javax.swing.JButton();
        Pressure = new javax.swing.JButton();
        Time = new javax.swing.JButton();
        Velocity = new javax.swing.JButton();
        Currency = new javax.swing.JButton();
        Length = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        fromUnit = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        inputvalue = new javax.swing.JTextField();
        Time1 = new javax.swing.JButton();
        Time2 = new javax.swing.JButton();
        Time3 = new javax.swing.JButton();
        Time4 = new javax.swing.JButton();
        Time5 = new javax.swing.JButton();
        Time6 = new javax.swing.JButton();
        Time7 = new javax.swing.JButton();
        Time8 = new javax.swing.JButton();
        Time9 = new javax.swing.JButton();
        Title = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        output = new javax.swing.JTable();

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Area.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Area.setText("Area");
        Area.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AreaActionPerformed(evt);
            }
        });

        Volume.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Volume.setText("Volume");
        Volume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolumeActionPerformed(evt);
            }
        });

        Pressure.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Pressure.setText("Pressure");
        Pressure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PressureActionPerformed(evt);
            }
        });

        Time.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Time.setText("Heat&Energy");
        Time.setToolTipText("");
        Time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeatActionPerformed(evt);
            }
        });

        Velocity.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Velocity.setText("Velocity");
        Velocity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VelocityActionPerformed(evt);
            }
        });

        Currency.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Currency.setText("Currency");
        Currency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrencyActionPerformed(evt);
            }
        });

        Length.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Length.setText("Length");
        Length.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LengthActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Kenyan Coffee Rg", 1, 36)); // NOI18N
        jLabel2.setText("From Unit:");

        fromUnit.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"Select a Category"}));
        fromUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromUnitActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Kenyan Coffee Rg", 1, 36)); // NOI18N
        jLabel3.setText("Output");

        jLabel4.setFont(new java.awt.Font("Kenyan Coffee Rg", 1, 36)); // NOI18N
        jLabel4.setText("Input Value:");

        inputvalue.setFont(new java.awt.Font("Esphimere", 0, 36)); // NOI18N
        inputvalue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        inputvalue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputvalueActionPerformed(evt);
            }
        });
        inputvalue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputvaluech2(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numberonly(evt);
            }
        });

        Time1.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Time1.setText("Time");
        Time1.setToolTipText("");
        Time1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeActionPerformed(evt);
            }
        });

        Time2.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Time2.setText("Temperature");
        Time2.setToolTipText("");
        Time2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TemperatureActionPerformed(evt);
            }
        });

        Time3.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Time3.setText("Memory");
        Time3.setToolTipText("");
        Time3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemoryActionPerformed(evt);
            }
        });

        Time4.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Time4.setText("Power");
        Time4.setToolTipText("");
        Time4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PowerActionPerformed(evt);
            }
        });

        Time5.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Time5.setText("Weight");
        Time5.setToolTipText("");
        Time5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WeightActionPerformed(evt);
            }
        });

        Time6.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Time6.setText("Angle");
        Time6.setToolTipText("");
        Time6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AngleActionPerformed(evt);
            }
        });

        Time7.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Time7.setText("Base-n");
        Time7.setToolTipText("");
        Time7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BaseActionPerformed(evt);
            }
        });

        Time8.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Time8.setText("Acceleration");
        Time8.setToolTipText("");
        Time8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AccelerationActionPerformed(evt);
            }
        });

        Time9.setFont(new java.awt.Font("Esphimere", 1, 24)); // NOI18N
        Time9.setText("Force");
        Time9.setToolTipText("");
        Time9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ForceActionPerformed(evt);
            }
        });

        Title.setFont(new java.awt.Font("AlphabitsSquared", 1, 78)); // NOI18N
        Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title.setText("Unit Converter");

        jLabel5.setFont(new java.awt.Font("Kenyan Coffee Rg", 1, 36)); // NOI18N
        jLabel5.setText("Categories:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        output.setBorder(javax.swing.BorderFactory.createEmptyBorder());
        output.setFont(new java.awt.Font("Gravity", 0, 36)); // NOI18N
        output.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        output.setRowHeight(40);
        output.setShowHorizontalLines(false);
        output.setShowVerticalLines(false);
        output.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                outputMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(output);
        if (output.getColumnModel().getColumnCount() > 0) {
            output.getColumnModel().getColumn(0).setResizable(false);
            output.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Time2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Length, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Time3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Area, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Volume, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Time4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Time5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Pressure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(Velocity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(Time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Time6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Currency, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Time7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Time1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Time8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Time9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fromUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inputvalue, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(53, 53, 53)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1041, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(126, 126, 126)
                                .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(939, 939, 939))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Time7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Time8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Length, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Area, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Volume, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Pressure, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Velocity, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Currency, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Time1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Time9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Time2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Time3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Time4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Time5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Time6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fromUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputvalue, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AreaActionPerformed
        // TODO add your handling code here:
        fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "m^2", "km^2", "yard^2", "acre", "hectare"}));
       
    }//GEN-LAST:event_AreaActionPerformed

    private void VolumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolumeActionPerformed
        // TODO add your handling code here:
        fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "m^3", "litre", "km^3", "millilitre", "cubic cm", "gallons(US)", "gallons(UK)"}));
    }//GEN-LAST:event_VolumeActionPerformed

    private void PressureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PressureActionPerformed
        // TODO add your handling code here:
        fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "bar", "mm-Hg", "atm", "Pascal", "torr", "psi", "kgf/m^2"}));
    }//GEN-LAST:event_PressureActionPerformed

    private void HeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HeatActionPerformed
        // TODO add your handling code here:
        fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "joule", "calorie", "BTU", "kilocalorie", "CHU", "erg", "kilowatt-hour", "watt-hour"}));
    }//GEN-LAST:event_HeatActionPerformed

    private void VelocityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VelocityActionPerformed
        // TODO add your handling code here:
        fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "m/s", "km/h", "miles/h", "knot", "mach"}));
    }//GEN-LAST:event_VelocityActionPerformed

    private void CurrencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurrencyActionPerformed
        // TODO add your handling code here:
        fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "USD", "EUR", "INR", "GBP", "JPY", "AUD", "CAD", "CNY", "RUB", "AED", "SGD" }));
    }//GEN-LAST:event_CurrencyActionPerformed

    /*public static int getTEXT_CURSOR() {
        return TEXT_CURSOR;
    }*/
    public boolean dot=false;
    private void fromUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromUnitActionPerformed
        // TODO add your handling code here:
        double value=0;
        try{
        String text = inputvalue.getText();
        value = Double.parseDouble(text);
        }
        catch(NumberFormatException e)
        {
        output.setModel(new javax.swing.table.DefaultTableModel(
                     new Object [][] {
                        {null,fromUnit.getItemAt(0)},
                        {null,fromUnit.getItemAt(1)},
                        {null,fromUnit.getItemAt(2)},
                        {null,fromUnit.getItemAt(3)},
                        {null,fromUnit.getItemAt(4)},
                        {null,fromUnit.getItemAt(5)},
                        {null,fromUnit.getItemAt(6)},
                        {null,fromUnit.getItemAt(7)},
                        {null,fromUnit.getItemAt(8)},
                     },
                     new String [] {
                        "", ""
                         }
                     ));
        }
        length m=new length();
        m.valueLength(value);
        area l=new area();
        l.valuearea(value);
        
        
    }//GEN-LAST:event_fromUnitActionPerformed

    private void LengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LengthActionPerformed
                fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "millimeter", "centimeter", "meter", "kilometer", "inch", "foot", "yard", "mile","nautical mile"}));
    }//GEN-LAST:event_LengthActionPerformed
   class area
    {
     void valuearea(double value)
     {
     Object selected = fromUnit.getSelectedItem();  
     switch (selected.toString()) {
            case "m^2":
                output.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                            {value,fromUnit.getItemAt(0)},
                            {value/10,fromUnit.getItemAt(1)},
                            {value/1000,fromUnit.getItemAt(2)},
                            {value/1000000,fromUnit.getItemAt(3)},
                            {value*0.03937,fromUnit.getItemAt(4)},
                            /*{value*0.003281,fromUnit.getItemAt(5)},
                            {value*0.001094,fromUnit.getItemAt(6)},
                            {value*6.214e-7,fromUnit.getItemAt(7)},
                            {value*5.3996e-7,fromUnit.getItemAt(8)},*/
                        },
                        new String [] {
                            "", ""
                        }
                ));
                break;
     }
     }
   }
    
    
    
    
    class length
    {
     void valueLength(double value)
     {
     Object selected = fromUnit.getSelectedItem();  
     switch (selected.toString()) {
            case "millimeter":
                output.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                            {value,fromUnit.getItemAt(0)},
                            {value/10,fromUnit.getItemAt(1)},
                            {value/1000,fromUnit.getItemAt(2)},
                            {value/1000000,fromUnit.getItemAt(3)},
                            {value*0.03937,fromUnit.getItemAt(4)},
                            {value*0.003281,fromUnit.getItemAt(5)},
                            {value*0.001094,fromUnit.getItemAt(6)},
                            {value*6.214e-7,fromUnit.getItemAt(7)},
                            {value*5.3996e-7,fromUnit.getItemAt(8)},
                        },
                        new String [] {
                            "", ""
                        }
                ));
                break;
            case "centimeter":
                output.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                            {value*10,fromUnit.getItemAt(0)},
                            {value,fromUnit.getItemAt(1)},
                            {value/100,fromUnit.getItemAt(2)},
                            {value/100000,fromUnit.getItemAt(3)},
                            {value*0.3937,fromUnit.getItemAt(4)},
                            {value*0.03281,fromUnit.getItemAt(5)},
                            {value*0.01094,fromUnit.getItemAt(6)},
                            {value*6.214e-6,fromUnit.getItemAt(7)},
                            {value*5.3996e-6,fromUnit.getItemAt(8)},
                        },
                        new String [] {
                            "", ""
                        }
                ));
                break;
            case "meter":
                output.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                            {value*1000,fromUnit.getItemAt(0)},
                            {value*100,fromUnit.getItemAt(1)},
                            {value,fromUnit.getItemAt(2)},
                            {value/1000,fromUnit.getItemAt(3)},
                            {value*39.37,fromUnit.getItemAt(4)},
                            {value*3.281,fromUnit.getItemAt(5)},
                            {value*1.094,fromUnit.getItemAt(6)},
                            {value*6.214e-3,fromUnit.getItemAt(7)},
                            {value*5.3996e-4,fromUnit.getItemAt(8)},
                        },
                        new String [] {
                        "", ""
                         }
                     ));
                break;
        }
        if(selected.toString().equals("kilometer"))
        {
           output.setModel(new javax.swing.table.DefaultTableModel(
                     new Object [][] {
                        {value*1000000,fromUnit.getItemAt(0)},
                        {value*100000,fromUnit.getItemAt(1)},
                        {value*1000,fromUnit.getItemAt(2)},
                        {value,fromUnit.getItemAt(3)},
                        {value*39370.31,fromUnit.getItemAt(4)},
                        {value*3280.859,fromUnit.getItemAt(5)},
                        {value*1093.619,fromUnit.getItemAt(6)},
                        {value*0.6214,fromUnit.getItemAt(7)},
                        {value*0.53996,fromUnit.getItemAt(8)},
                     },
                     new String [] {
                        "", ""
                         }
                     ));
        }
        
        if(selected.toString().equals("inch"))
        {
           output.setModel(new javax.swing.table.DefaultTableModel(
                     new Object [][] {
                        {value*25.4,fromUnit.getItemAt(0)},
                        {value*2.54,fromUnit.getItemAt(1)},
                        {value*0.0254,fromUnit.getItemAt(2)},
                        {value*2.54e-5,fromUnit.getItemAt(3)},
                        {value,fromUnit.getItemAt(4)},
                        {value*0.0833,fromUnit.getItemAt(5)},
                        {value*0.02778,fromUnit.getItemAt(6)},
                        {value*1.578e-5,fromUnit.getItemAt(7)},
                        {value*1.371e-5,fromUnit.getItemAt(8)},
                     },
                     new String [] {
                        "", ""
                         }
                     ));
        }
        
        if(selected.toString().equals("foot"))
        {
           output.setModel(new javax.swing.table.DefaultTableModel(
                     new Object [][] {
                        {value*304.8,fromUnit.getItemAt(0)},
                        {value*30.48,fromUnit.getItemAt(1)},
                        {value*0.3048,fromUnit.getItemAt(2)},
                        {value*0.0003048,fromUnit.getItemAt(3)},
                        {value*12,fromUnit.getItemAt(4)},
                        {value,fromUnit.getItemAt(5)},
                        {value*0.333,fromUnit.getItemAt(6)},
                        {value*0.0001893,fromUnit.getItemAt(7)},
                        {value*0.000164579,fromUnit.getItemAt(8)},
                     },
                     new String [] {
                        "", ""
                         }
                     ));
        }
        
        if(selected.toString().equals("yard"))
        {
           output.setModel(new javax.swing.table.DefaultTableModel(
                     new Object [][] {
                        {value*914.4,fromUnit.getItemAt(0)},
                        {value*91.44,fromUnit.getItemAt(1)},
                        {value*0.9144,fromUnit.getItemAt(2)},
                        {value*0.0009144,fromUnit.getItemAt(3)},
                        {value*36,fromUnit.getItemAt(4)},
                        {value*3,fromUnit.getItemAt(5)},
                        {value,fromUnit.getItemAt(6)},
                        {value*0.000568,fromUnit.getItemAt(7)},
                        {value*0.0004937,fromUnit.getItemAt(8)},
                     },
                     new String [] {
                        "", ""
                         }
                     ));
        }
        
        if(selected.toString().equals("mile"))
        {
           output.setModel(new javax.swing.table.DefaultTableModel(
                     new Object [][] {
                        {value*1.609e+6,fromUnit.getItemAt(0)},
                        {value*1.609e+5,fromUnit.getItemAt(1)},
                        {value*1.609e+3,fromUnit.getItemAt(2)},
                        {value*1.6093,fromUnit.getItemAt(3)},
                        {value*63360,fromUnit.getItemAt(4)},
                        {value*5280,fromUnit.getItemAt(5)},
                        {value*1760,fromUnit.getItemAt(6)},
                        {value,fromUnit.getItemAt(7)},
                        {value*0.869,fromUnit.getItemAt(8)},
                     },
                     new String [] {
                        "", ""
                         }
                     ));
        }
        
        if(selected.toString().equals("nautical mile"))
        {
           output.setModel(new javax.swing.table.DefaultTableModel(
                     new Object [][] {
                        {value*1.852e+6,fromUnit.getItemAt(0)},
                        {value*1.852e+5,fromUnit.getItemAt(1)},
                        {value*1.852e+3,fromUnit.getItemAt(2)},
                        {value*1.852,fromUnit.getItemAt(3)},
                        {value*72913.4,fromUnit.getItemAt(4)},
                        {value*6076.12,fromUnit.getItemAt(5)},
                        {value*2025.37,fromUnit.getItemAt(6)},
                        {value*1.151,fromUnit.getItemAt(7)},
                        {value,fromUnit.getItemAt(8)},
                     },
                     new String [] {
                        "", ""
                         }
                     ));
        }
        
    }
    }
    
    //private boolean dot = false;  
    private void inputvaluech2(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputvaluech2
        double value = 0;
        try{
        String text = inputvalue.getText();
        value = Double.parseDouble(text);
        }
        catch(NumberFormatException e)
        {
        output.setModel(new javax.swing.table.DefaultTableModel(
                     new Object [][] {
                        {null,fromUnit.getItemAt(0)},
                        {null,fromUnit.getItemAt(1)},
                        {null,fromUnit.getItemAt(2)},
                        {null,fromUnit.getItemAt(3)},
                        {null,fromUnit.getItemAt(4)},
                        {null,fromUnit.getItemAt(5)},
                        {null,fromUnit.getItemAt(6)},
                        {null,fromUnit.getItemAt(7)},
                        {null,fromUnit.getItemAt(8)},
                     },
                    new String [] {
                      "", ""
                        }
                     ));
        }
        length m=new length();
        m.valueLength(value);
        area l=new area();
        l.valuearea(value);
    }//GEN-LAST:event_inputvaluech2

    private void numberonly(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberonly
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c)||(c==KeyEvent.VK_BACK_SPACE)||(c==KeyEvent.VK_DELETE)||(c==KeyEvent.VK_PERIOD)))
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_numberonly

    private void TimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeActionPerformed
        fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "millisecond", "second", "minute", "hour", "day", "week", "month", "year"}));
    }//GEN-LAST:event_TimeActionPerformed

    private void TemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TemperatureActionPerformed
        fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Celsius", "Fahrenheit", "Kelvin"}));
    }//GEN-LAST:event_TemperatureActionPerformed

    private void MemoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemoryActionPerformed
        fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "bit","nibble", "Byte","kiloByte","megaByte","gigaByte","teraByte","petaByte"}));
    }//GEN-LAST:event_MemoryActionPerformed

    private void PowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PowerActionPerformed
         fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "watt", "horse-power", "kilowatt"}));
    }//GEN-LAST:event_PowerActionPerformed

    private void WeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WeightActionPerformed
         fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gram", "MilliGram", "Kilogram", "Pound", "Ounce"}));
    }//GEN-LAST:event_WeightActionPerformed

    private void AngleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AngleActionPerformed
         fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "degree", "radian", "gradian"}));
    }//GEN-LAST:event_AngleActionPerformed

    private void BaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BaseActionPerformed
        fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "binary", "octal", "decimal", "hexadecimal"}));
    }//GEN-LAST:event_BaseActionPerformed

    private void AccelerationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AccelerationActionPerformed
        fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "m/s^2", "km/h^2", "miles/h^2", "g-force"}));
    }//GEN-LAST:event_AccelerationActionPerformed

    private void ForceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ForceActionPerformed
        fromUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Newton", "dyne", "kgf"}));
    }//GEN-LAST:event_ForceActionPerformed

    private void outputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outputMouseClicked
         // TODO add your handling code here:
        /*output =(JTable) evt.getSource();
        Point p = evt.getPoint();
        int row = output.rowAtPoint(p);*/
        //if (evt.getClickCount() == 2) {
            fromUnit.setSelectedIndex(output.getSelectedRow());
            //}
    }//GEN-LAST:event_outputMouseClicked

    private void inputvalueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputvalueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputvalueActionPerformed

  
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Area;
    private javax.swing.JButton Currency;
    private javax.swing.JButton Length;
    private javax.swing.JButton Pressure;
    private javax.swing.JButton Time;
    private javax.swing.JButton Time1;
    private javax.swing.JButton Time2;
    private javax.swing.JButton Time3;
    private javax.swing.JButton Time4;
    private javax.swing.JButton Time5;
    private javax.swing.JButton Time6;
    private javax.swing.JButton Time7;
    private javax.swing.JButton Time8;
    private javax.swing.JButton Time9;
    private javax.swing.JLabel Title;
    private javax.swing.JButton Velocity;
    private javax.swing.JButton Volume;
    private javax.swing.JComboBox fromUnit;
    private javax.swing.JTextField inputvalue;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable output;
    // End of variables declaration//GEN-END:variables
}
